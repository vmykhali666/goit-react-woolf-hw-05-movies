{"version":3,"file":"static/js/186.1bd7eaf8.chunk.js","mappings":"0MAqCA,UAjCgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAU1B,OARAI,EAAAA,EAAAA,YAAU,WACHR,GAILS,EAAAA,EAAAA,gBAA0BT,GAASU,KAAKH,EAC1C,GAAG,CAACP,KAGFW,EAAAA,EAAAA,KAAA,OAAAC,SACGN,EAAQO,OAAS,GAChBC,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAAC,SAAI,aACJD,EAAAA,EAAAA,KAAA,MAAAC,SACGN,EAAQS,KAAI,SAAAC,GAAA,IAAGC,EAAED,EAAFC,GAAIC,EAAMF,EAANE,OAAQC,EAAOH,EAAPG,QAAO,OACjCL,EAAAA,EAAAA,MAAA,MAAAF,SAAA,EACEE,EAAAA,EAAAA,MAAA,MAAAF,SAAA,CAAI,WAASM,MACbP,EAAAA,EAAAA,KAAA,KAAAC,SAAIO,MAFGF,EAGJ,UAKXN,EAAAA,EAAAA,KAAA,KAAAC,SAAG,8CAIX,C,gHClCaH,EAAS,oBAAAA,KAAAW,EAAAA,EAAAA,GAAA,KAAAX,EAAA,CA2EjB,OA3EiBY,EAAAA,EAAAA,GAAAZ,EAAA,OAAAa,IAAA,kBAAAC,MAAA,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAIlB,SAAAC,EAA6B3B,GAAO,IAAA4B,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAC+C,OAAzEJ,EAAG,GAAAK,OAAMxB,EAAUyB,SAAQ,WAAAD,OAAUjC,EAAO,aAAAiC,OAAYxB,EAAU0B,QAAO,8BAAAL,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGpDI,EAAAA,EAAAA,IAAUR,GAAK,KAAD,EACV,OADrBC,EAAQC,EAAAO,KACdC,QAAQC,IAAIV,EAASW,MAAMV,EAAAW,OAAA,SACpBZ,EAASW,MAAI,OAEW,MAFXV,EAAAC,KAAA,EAAAD,EAAAY,GAAAZ,EAAA,SAEpBQ,QAAQK,MAAM,SAAQb,EAAAY,IAASZ,EAAAY,GAAA,yBAAAZ,EAAAc,OAAA,GAAAjB,EAAA,kBAGtC,gBAAAkB,GAAA,OAAArB,EAAAsB,MAAA,KAAAC,UAAA,EAfiB,IAejB,CAAAzB,IAAA,oBAAAC,MAAA,eAAAyB,GAAAvB,EAAAA,EAAAA,GAAAC,IAAAA,MAED,SAAAuB,EAA+BC,GAAU,IAAAtB,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAyB,GAAA,cAAAA,EAAApB,KAAAoB,EAAAnB,MAAA,OACoD,OAAnFJ,EAAG,GAAAK,OAAMxB,EAAUyB,SAAQ,kBAAAD,OAAiBiB,EAAU,aAAAjB,OAAYxB,EAAU0B,SAAOgB,EAAApB,KAAA,EAAAoB,EAAAnB,KAAA,EAG9DI,EAAAA,EAAAA,IAAUR,GAAK,KAAD,EAAvB,OAARC,EAAQsB,EAAAd,KAAAc,EAAAV,OAAA,SACPZ,EAASW,KAAKY,SAAO,OAEG,MAFHD,EAAApB,KAAA,EAAAoB,EAAAT,GAAAS,EAAA,SAE5Bb,QAAQK,MAAM,SAAQQ,EAAAT,IAASS,EAAAT,GAAA,yBAAAS,EAAAP,OAAA,GAAAK,EAAA,kBAGtC,gBAAAI,GAAA,OAAAL,EAAAF,MAAA,KAAAC,UAAA,EAZA,IAYA,CAAAzB,IAAA,eAAAC,MAAA,eAAA+B,GAAA7B,EAAAA,EAAAA,GAAAC,IAAAA,MAED,SAAA6B,EAA0BC,EAAOC,GAAI,IAAA7B,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAgC,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,OACsE,OAAjGJ,EAAG,GAAAK,OAAMxB,EAAUyB,SAAQ,wBAAAD,OAAuBuB,EAAK,UAAAvB,OAASwB,EAAI,aAAAxB,OAAYxB,EAAU0B,SAAOuB,EAAA3B,KAAA,EAAA2B,EAAA1B,KAAA,EAG5EI,EAAAA,EAAAA,IAAUR,GAAK,KAAD,EAAvB,OAARC,EAAQ6B,EAAArB,KAAAqB,EAAAjB,OAAA,SACPZ,EAASW,KAAKY,SAAO,OAEG,MAFHM,EAAA3B,KAAA,EAAA2B,EAAAhB,GAAAgB,EAAA,SAE5BpB,QAAQK,MAAM,SAAQe,EAAAhB,IAASgB,EAAAhB,GAAA,yBAAAgB,EAAAd,OAAA,GAAAW,EAAA,kBAGtC,gBAAAI,EAAAC,GAAA,OAAAN,EAAAR,MAAA,KAAAC,UAAA,EAZA,IAYA,CAAAzB,IAAA,eAAAC,MAAA,eAAAsC,GAAApC,EAAAA,EAAAA,GAAAC,IAAAA,MAED,SAAAoC,EAA0B9D,GAAO,IAAA4B,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAqC,GAAA,cAAAA,EAAAhC,KAAAgC,EAAA/B,MAAA,OACkD,OAAzEJ,EAAG,GAAAK,OAAMxB,EAAUyB,SAAQ,WAAAD,OAAUjC,EAAO,aAAAiC,OAAYxB,EAAU0B,SAAO4B,EAAAhC,KAAA,EAAAgC,EAAA/B,KAAA,EAGpDI,EAAAA,EAAAA,IAAUR,GAAK,KAAD,EAAvB,OAARC,EAAQkC,EAAA1B,KAAA0B,EAAAtB,OAAA,SACPZ,EAASW,MAAI,OAEW,MAFXuB,EAAAhC,KAAA,EAAAgC,EAAArB,GAAAqB,EAAA,SAEpBzB,QAAQK,MAAM,SAAQoB,EAAArB,IAASqB,EAAArB,GAAA,yBAAAqB,EAAAnB,OAAA,GAAAkB,EAAA,kBAGtC,gBAAAE,GAAA,OAAAH,EAAAf,MAAA,KAAAC,UAAA,EAZA,IAYA,CAAAzB,IAAA,sBAAAC,MAAA,eAAA0C,GAAAxC,EAAAA,EAAAA,GAAAC,IAAAA,MAED,SAAAwC,EAAiClE,GAAO,IAAA4B,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAyC,GAAA,cAAAA,EAAApC,KAAAoC,EAAAnC,MAAA,OACmD,OAAjFJ,EAAG,GAAAK,OAAMxB,EAAUyB,SAAQ,WAAAD,OAAUjC,EAAO,qBAAAiC,OAAoBxB,EAAU0B,SAAOgC,EAAApC,KAAA,EAAAoC,EAAAnC,KAAA,EAG5DI,EAAAA,EAAAA,IAAUR,GAAK,KAAD,EAAvB,OAARC,EAAQsC,EAAA9B,KAAA8B,EAAA1B,OAAA,SACPZ,EAASW,KAAK4B,MAAI,OAEM,MAFND,EAAApC,KAAA,EAAAoC,EAAAzB,GAAAyB,EAAA,SAEzB7B,QAAQK,MAAM,SAAQwB,EAAAzB,IAASyB,EAAAzB,GAAA,yBAAAyB,EAAAvB,OAAA,GAAAsB,EAAA,kBAGtC,gBAAAG,GAAA,OAAAJ,EAAAnB,MAAA,KAAAC,UAAA,EAZA,IAYA,CAAAzB,IAAA,kBAAAC,MAAA,eAAA+C,GAAA7C,EAAAA,EAAAA,GAAAC,IAAAA,MAED,SAAA6C,EAA6BvE,GAAO,IAAA4B,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAA8C,GAAA,cAAAA,EAAAzC,KAAAyC,EAAAxC,MAAA,OACuD,OAAjFJ,EAAG,GAAAK,OAAMxB,EAAUyB,SAAQ,WAAAD,OAAUjC,EAAO,qBAAAiC,OAAoBxB,EAAU0B,SAAOqC,EAAAzC,KAAA,EAAAyC,EAAAxC,KAAA,EAG5DI,EAAAA,EAAAA,IAAUR,GAAK,KAAD,EAAvB,OAARC,EAAQ2C,EAAAnC,KAAAmC,EAAA/B,OAAA,SACPZ,EAASW,KAAKY,SAAO,OAEG,MAFHoB,EAAAzC,KAAA,EAAAyC,EAAA9B,GAAA8B,EAAA,SAE5BlC,QAAQK,MAAM,SAAQ6B,EAAA9B,IAAS8B,EAAA9B,GAAA,yBAAA8B,EAAA5B,OAAA,GAAA2B,EAAA,kBAGtC,gBAAAE,GAAA,OAAAH,EAAAxB,MAAA,KAAAC,UAAA,EAZA,MAYAtC,CAAA,CA3EiB,GAATA,EACF0B,QAAU,mCADR1B,EAEFyB,SAAW,8B","sources":["components/Reviews/Reviews.jsx","helpers/moviesAPI.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { moviesAPI } from 'helpers/moviesAPI';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n\n    moviesAPI.getMovieReviews(movieId).then(setReviews);\n  }, [movieId]);\n\n  return (\n    <div>\n      {reviews.length > 0 ? (\n        <div>\n          <h2>Reviews</h2>\n          <ul>\n            {reviews.map(({ id, author, content }) => (\n              <li key={id}>\n                <h3>Author: {author}</h3>\n                <p>{content}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      ) : (\n        <p>We don't have any reviews for this movie</p>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;","import axios from 'axios';\nexport class moviesAPI {\n    static API_KEY = 'e85efcf2ca20bceba27e538fe32c6662';\n    static BASE_URL = 'https://api.themoviedb.org/3';\n\n    static async getMovieDetails(movieId) {\n        const url = `${moviesAPI.BASE_URL}/movie/${movieId}?api_key=${moviesAPI.API_KEY}&append_to_response=videos`;\n\n        try {\n            const response = await axios.get(url);\n            console.log(response.data);\n            return response.data;\n        } catch (error) {\n            console.error('Error:', error);\n            throw error;\n        }\n    }\n\n    static async getTrendingMovies(timeWindow) {\n        const url = `${moviesAPI.BASE_URL}/trending/all/${timeWindow}?api_key=${moviesAPI.API_KEY}`;\n\n        try {\n            const response = await axios.get(url);\n            return response.data.results;\n        } catch (error) {\n            console.error('Error:', error);\n            throw error;\n        }\n    }\n\n    static async searchMovies(query, page) {\n        const url = `${moviesAPI.BASE_URL}/search/movie?query=${query}&page=${page}&api_key=${moviesAPI.API_KEY}`;\n\n        try {\n            const response = await axios.get(url);\n            return response.data.results;\n        } catch (error) {\n            console.error('Error:', error);\n            throw error;\n        }\n    }\n\n    static async getMovieById(movieId) {\n        const url = `${moviesAPI.BASE_URL}/movie/${movieId}?api_key=${moviesAPI.API_KEY}`;\n\n        try {\n            const response = await axios.get(url);\n            return response.data;\n        } catch (error) {\n            console.error('Error:', error);\n            throw error;\n        }\n    }\n\n    static async getCreditsByMovieId(movieId) {\n        const url = `${moviesAPI.BASE_URL}/movie/${movieId}/credits?api_key=${moviesAPI.API_KEY}`;\n\n        try {\n            const response = await axios.get(url);\n            return response.data.cast;\n        } catch (error) {\n            console.error('Error:', error);\n            throw error;\n        }\n    }\n\n    static async getMovieReviews(movieId) {\n        const url = `${moviesAPI.BASE_URL}/movie/${movieId}/reviews?api_key=${moviesAPI.API_KEY}`;\n\n        try {\n            const response = await axios.get(url);\n            return response.data.results;\n        } catch (error) {\n            console.error('Error:', error);\n            throw error;\n        }\n    }\n}"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","useEffect","moviesAPI","then","_jsx","children","length","_jsxs","map","_ref","id","author","content","_classCallCheck","_createClass","key","value","_getMovieDetails","_asyncToGenerator","_regeneratorRuntime","_callee","url","response","_context","prev","next","concat","BASE_URL","API_KEY","axios","sent","console","log","data","abrupt","t0","error","stop","_x","apply","arguments","_getTrendingMovies","_callee2","timeWindow","_context2","results","_x2","_searchMovies","_callee3","query","page","_context3","_x3","_x4","_getMovieById","_callee4","_context4","_x5","_getCreditsByMovieId","_callee5","_context5","cast","_x6","_getMovieReviews","_callee6","_context6","_x7"],"sourceRoot":""}