{"version":3,"file":"static/js/92.d39b68e3.chunk.js","mappings":"qOACA,EAA2B,uB,SCoC3B,EAhCa,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAMpB,OAJAI,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,oBAA8BT,GAASU,KAAKH,EAC9C,GAAG,CAACP,IAGFM,EAAKK,OAAS,GACVC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,UACJC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAaH,SACzBP,EAAKW,KAAI,SAAAC,GAAA,IAAGC,EAAED,EAAFC,GAAIC,EAAIF,EAAJE,KAAMC,EAASH,EAATG,UAAWC,EAAYJ,EAAZI,aAAY,OAC5CV,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,OACES,IAAG,mCAAAC,OAAqCF,GACxCG,IAAKL,EACLM,MAAM,SAERZ,EAAAA,EAAAA,KAAA,KAAAD,SAAIO,KACJR,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,cAAYQ,OAPRF,EAQJ,UAKXL,EAAAA,EAAAA,KAAA,KAAAD,SAAG,2DAGX,C,gHClCaJ,EAAS,oBAAAA,KAAAkB,EAAAA,EAAAA,GAAA,KAAAlB,EAAA,CA2EjB,OA3EiBmB,EAAAA,EAAAA,GAAAnB,EAAA,OAAAoB,IAAA,kBAAAC,MAAA,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAIlB,SAAAC,EAA6BlC,GAAO,IAAAmC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAC+C,OAAzEJ,EAAG,GAAAX,OAAMf,EAAU+B,SAAQ,WAAAhB,OAAUxB,EAAO,aAAAwB,OAAYf,EAAUgC,QAAO,8BAAAJ,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGpDG,EAAAA,EAAAA,IAAUP,GAAK,KAAD,EACV,OADrBC,EAAQC,EAAAM,KACdC,QAAQC,IAAIT,EAASU,MAAMT,EAAAU,OAAA,SACpBX,EAASU,MAAI,OAEW,MAFXT,EAAAC,KAAA,EAAAD,EAAAW,GAAAX,EAAA,SAEpBO,QAAQK,MAAM,SAAQZ,EAAAW,IAASX,EAAAW,GAAA,yBAAAX,EAAAa,OAAA,GAAAhB,EAAA,kBAGtC,gBAAAiB,GAAA,OAAApB,EAAAqB,MAAA,KAAAC,UAAA,EAfiB,IAejB,CAAAxB,IAAA,oBAAAC,MAAA,eAAAwB,GAAAtB,EAAAA,EAAAA,GAAAC,IAAAA,MAED,SAAAsB,EAA+BC,GAAU,IAAArB,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAwB,GAAA,cAAAA,EAAAnB,KAAAmB,EAAAlB,MAAA,OACoD,OAAnFJ,EAAG,GAAAX,OAAMf,EAAU+B,SAAQ,kBAAAhB,OAAiBgC,EAAU,aAAAhC,OAAYf,EAAUgC,SAAOgB,EAAAnB,KAAA,EAAAmB,EAAAlB,KAAA,EAG9DG,EAAAA,EAAAA,IAAUP,GAAK,KAAD,EAAvB,OAARC,EAAQqB,EAAAd,KAAAc,EAAAV,OAAA,SACPX,EAASU,KAAKY,SAAO,OAEG,MAFHD,EAAAnB,KAAA,EAAAmB,EAAAT,GAAAS,EAAA,SAE5Bb,QAAQK,MAAM,SAAQQ,EAAAT,IAASS,EAAAT,GAAA,yBAAAS,EAAAP,OAAA,GAAAK,EAAA,kBAGtC,gBAAAI,GAAA,OAAAL,EAAAF,MAAA,KAAAC,UAAA,EAZA,IAYA,CAAAxB,IAAA,eAAAC,MAAA,eAAA8B,GAAA5B,EAAAA,EAAAA,GAAAC,IAAAA,MAED,SAAA4B,EAA0BC,EAAOC,GAAI,IAAA5B,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAA+B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,OACsE,OAAjGJ,EAAG,GAAAX,OAAMf,EAAU+B,SAAQ,wBAAAhB,OAAuBsC,EAAK,UAAAtC,OAASuC,EAAI,aAAAvC,OAAYf,EAAUgC,SAAOuB,EAAA1B,KAAA,EAAA0B,EAAAzB,KAAA,EAG5EG,EAAAA,EAAAA,IAAUP,GAAK,KAAD,EAAvB,OAARC,EAAQ4B,EAAArB,KAAAqB,EAAAjB,OAAA,SACPX,EAASU,KAAKY,SAAO,OAEG,MAFHM,EAAA1B,KAAA,EAAA0B,EAAAhB,GAAAgB,EAAA,SAE5BpB,QAAQK,MAAM,SAAQe,EAAAhB,IAASgB,EAAAhB,GAAA,yBAAAgB,EAAAd,OAAA,GAAAW,EAAA,kBAGtC,gBAAAI,EAAAC,GAAA,OAAAN,EAAAR,MAAA,KAAAC,UAAA,EAZA,IAYA,CAAAxB,IAAA,eAAAC,MAAA,eAAAqC,GAAAnC,EAAAA,EAAAA,GAAAC,IAAAA,MAED,SAAAmC,EAA0BpE,GAAO,IAAAmC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAoC,GAAA,cAAAA,EAAA/B,KAAA+B,EAAA9B,MAAA,OACkD,OAAzEJ,EAAG,GAAAX,OAAMf,EAAU+B,SAAQ,WAAAhB,OAAUxB,EAAO,aAAAwB,OAAYf,EAAUgC,SAAO4B,EAAA/B,KAAA,EAAA+B,EAAA9B,KAAA,EAGpDG,EAAAA,EAAAA,IAAUP,GAAK,KAAD,EAAvB,OAARC,EAAQiC,EAAA1B,KAAA0B,EAAAtB,OAAA,SACPX,EAASU,MAAI,OAEW,MAFXuB,EAAA/B,KAAA,EAAA+B,EAAArB,GAAAqB,EAAA,SAEpBzB,QAAQK,MAAM,SAAQoB,EAAArB,IAASqB,EAAArB,GAAA,yBAAAqB,EAAAnB,OAAA,GAAAkB,EAAA,kBAGtC,gBAAAE,GAAA,OAAAH,EAAAf,MAAA,KAAAC,UAAA,EAZA,IAYA,CAAAxB,IAAA,sBAAAC,MAAA,eAAAyC,GAAAvC,EAAAA,EAAAA,GAAAC,IAAAA,MAED,SAAAuC,EAAiCxE,GAAO,IAAAmC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAwC,GAAA,cAAAA,EAAAnC,KAAAmC,EAAAlC,MAAA,OACmD,OAAjFJ,EAAG,GAAAX,OAAMf,EAAU+B,SAAQ,WAAAhB,OAAUxB,EAAO,qBAAAwB,OAAoBf,EAAUgC,SAAOgC,EAAAnC,KAAA,EAAAmC,EAAAlC,KAAA,EAG5DG,EAAAA,EAAAA,IAAUP,GAAK,KAAD,EAAvB,OAARC,EAAQqC,EAAA9B,KAAA8B,EAAA1B,OAAA,SACPX,EAASU,KAAKxC,MAAI,OAEM,MAFNmE,EAAAnC,KAAA,EAAAmC,EAAAzB,GAAAyB,EAAA,SAEzB7B,QAAQK,MAAM,SAAQwB,EAAAzB,IAASyB,EAAAzB,GAAA,yBAAAyB,EAAAvB,OAAA,GAAAsB,EAAA,kBAGtC,gBAAAE,GAAA,OAAAH,EAAAnB,MAAA,KAAAC,UAAA,EAZA,IAYA,CAAAxB,IAAA,kBAAAC,MAAA,eAAA6C,GAAA3C,EAAAA,EAAAA,GAAAC,IAAAA,MAED,SAAA2C,EAA6B5E,GAAO,IAAAmC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAA4C,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAtC,MAAA,OACuD,OAAjFJ,EAAG,GAAAX,OAAMf,EAAU+B,SAAQ,WAAAhB,OAAUxB,EAAO,qBAAAwB,OAAoBf,EAAUgC,SAAOoC,EAAAvC,KAAA,EAAAuC,EAAAtC,KAAA,EAG5DG,EAAAA,EAAAA,IAAUP,GAAK,KAAD,EAAvB,OAARC,EAAQyC,EAAAlC,KAAAkC,EAAA9B,OAAA,SACPX,EAASU,KAAKY,SAAO,OAEG,MAFHmB,EAAAvC,KAAA,EAAAuC,EAAA7B,GAAA6B,EAAA,SAE5BjC,QAAQK,MAAM,SAAQ4B,EAAA7B,IAAS6B,EAAA7B,GAAA,yBAAA6B,EAAA3B,OAAA,GAAA0B,EAAA,kBAGtC,gBAAAE,GAAA,OAAAH,EAAAvB,MAAA,KAAAC,UAAA,EAZA,MAYA5C,CAAA,CA3EiB,GAATA,EACFgC,QAAU,mCADRhC,EAEF+B,SAAW,8B","sources":["webpack://goit-react-woolf-hw-05-movies/./src/style/Cast.module.css?41aa","components/Cast/Cast.jsx","helpers/moviesAPI.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"CastList\":\"Cast_CastList__cPn9S\"};","import React, { useEffect, useState } from 'react';\nimport { moviesAPI } from 'helpers/moviesAPI';\nimport { useParams } from 'react-router-dom';\nimport css from 'style/Cast.module.css';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    moviesAPI.getCreditsByMovieId(movieId).then(setCast);\n  }, [movieId]);\n\n  return (\n    cast.length > 0 ? (\n        <div>\n          <h3>Cast</h3>\n          <ul className={css.CastList}>\n            {cast.map(({ id, name, character, profile_path }) => (\n              <li key={id}>\n                <img\n                  src={`https://image.tmdb.org/t/p/w300/${profile_path}`}\n                  alt={name}\n                  width=\"100\"\n                />\n                <p>{name}</p>\n                <p>Character: {character}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      ) : (\n        <p>We don't have any information about cast for this movie</p>\n      )\n    );\n};\n\nexport default Cast;","import axios from 'axios';\nexport class moviesAPI {\n    static API_KEY = 'e85efcf2ca20bceba27e538fe32c6662';\n    static BASE_URL = 'https://api.themoviedb.org/3';\n\n    static async getMovieDetails(movieId) {\n        const url = `${moviesAPI.BASE_URL}/movie/${movieId}?api_key=${moviesAPI.API_KEY}&append_to_response=videos`;\n\n        try {\n            const response = await axios.get(url);\n            console.log(response.data);\n            return response.data;\n        } catch (error) {\n            console.error('Error:', error);\n            throw error;\n        }\n    }\n\n    static async getTrendingMovies(timeWindow) {\n        const url = `${moviesAPI.BASE_URL}/trending/all/${timeWindow}?api_key=${moviesAPI.API_KEY}`;\n\n        try {\n            const response = await axios.get(url);\n            return response.data.results;\n        } catch (error) {\n            console.error('Error:', error);\n            throw error;\n        }\n    }\n\n    static async searchMovies(query, page) {\n        const url = `${moviesAPI.BASE_URL}/search/movie?query=${query}&page=${page}&api_key=${moviesAPI.API_KEY}`;\n\n        try {\n            const response = await axios.get(url);\n            return response.data.results;\n        } catch (error) {\n            console.error('Error:', error);\n            throw error;\n        }\n    }\n\n    static async getMovieById(movieId) {\n        const url = `${moviesAPI.BASE_URL}/movie/${movieId}?api_key=${moviesAPI.API_KEY}`;\n\n        try {\n            const response = await axios.get(url);\n            return response.data;\n        } catch (error) {\n            console.error('Error:', error);\n            throw error;\n        }\n    }\n\n    static async getCreditsByMovieId(movieId) {\n        const url = `${moviesAPI.BASE_URL}/movie/${movieId}/credits?api_key=${moviesAPI.API_KEY}`;\n\n        try {\n            const response = await axios.get(url);\n            return response.data.cast;\n        } catch (error) {\n            console.error('Error:', error);\n            throw error;\n        }\n    }\n\n    static async getMovieReviews(movieId) {\n        const url = `${moviesAPI.BASE_URL}/movie/${movieId}/reviews?api_key=${moviesAPI.API_KEY}`;\n\n        try {\n            const response = await axios.get(url);\n            return response.data.results;\n        } catch (error) {\n            console.error('Error:', error);\n            throw error;\n        }\n    }\n}"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","useEffect","moviesAPI","then","length","_jsxs","children","_jsx","className","css","map","_ref","id","name","character","profile_path","src","concat","alt","width","_classCallCheck","_createClass","key","value","_getMovieDetails","_asyncToGenerator","_regeneratorRuntime","_callee","url","response","_context","prev","next","BASE_URL","API_KEY","axios","sent","console","log","data","abrupt","t0","error","stop","_x","apply","arguments","_getTrendingMovies","_callee2","timeWindow","_context2","results","_x2","_searchMovies","_callee3","query","page","_context3","_x3","_x4","_getMovieById","_callee4","_context4","_x5","_getCreditsByMovieId","_callee5","_context5","_x6","_getMovieReviews","_callee6","_context6","_x7"],"sourceRoot":""}