{"version":3,"file":"static/js/186.23ce203a.chunk.js","mappings":"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","sources":["components/Reviews/Reviews.jsx","helpers/moviesAPI.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { moviesAPI } from 'helpers/moviesAPI';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n\n    moviesAPI.getMovieReviews(movieId).then(setReviews);\n  }, [movieId]);\n\n  return (\n    <div>\n      {reviews.length > 0 ? (\n        <div>\n          <h2>Reviews</h2>\n          <ul>\n            {reviews.map(({ id, author, content }) => (\n              <li key={id}>\n                <h3>Author: {author}</h3>\n                <p>{content}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      ) : (\n        <p>We don't have any reviews for this movie</p>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;","import axios from 'axios';\nexport class moviesAPI {\n    static API_KEY = 'e85efcf2ca20bceba27e538fe32c6662';\n    static BASE_URL = 'https://api.themoviedb.org/3';\n\n    static async getMovieDetails(movieId) {\n        const url = `${moviesAPI.BASE_URL}/movie/${movieId}?api_key=${moviesAPI.API_KEY}&append_to_response=videos`;\n\n        try {\n            const response = await axios.get(url);\n            return response.data;\n        } catch (error) {\n            console.error('Error:', error);\n            throw error;\n        }\n    }\n\n    static async getTrendingMovies(timeWindow) {\n        const url = `${moviesAPI.BASE_URL}/trending/all/${timeWindow}?api_key=${moviesAPI.API_KEY}`;\n\n        try {\n            const response = await axios.get(url);\n            return response.data.results;\n        } catch (error) {\n            console.error('Error:', error);\n            throw error;\n        }\n    }\n\n    static async searchMovies(query, page) {\n        const url = `${moviesAPI.BASE_URL}/search/movie?query=${query}&page=${page}&api_key=${moviesAPI.API_KEY}`;\n\n        try {\n            const response = await axios.get(url);\n            return response.data.results;\n        } catch (error) {\n            console.error('Error:', error);\n            throw error;\n        }\n    }\n\n    static async getMovieById(movieId) {\n        const url = `${moviesAPI.BASE_URL}/movie/${movieId}?api_key=${moviesAPI.API_KEY}`;\n\n        try {\n            const response = await axios.get(url);\n            return response.data;\n        } catch (error) {\n            console.error('Error:', error);\n            throw error;\n        }\n    }\n\n    static async getCreditsByMovieId(movieId) {\n        const url = `${moviesAPI.BASE_URL}/movie/${movieId}/credits?api_key=${moviesAPI.API_KEY}`;\n\n        try {\n            const response = await axios.get(url);\n            return response.data.cast;\n        } catch (error) {\n            console.error('Error:', error);\n            throw error;\n        }\n    }\n\n    static async getMovieReviews(movieId) {\n        const url = `${moviesAPI.BASE_URL}/movie/${movieId}/reviews?api_key=${moviesAPI.API_KEY}`;\n\n        try {\n            const response = await axios.get(url);\n            return response.data.results;\n        } catch (error) {\n            console.error('Error:', error);\n            throw error;\n        }\n    }\n}"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","useEffect","moviesAPI","then","_jsx","children","length","_jsxs","map","_ref","id","author","content","_classCallCheck","_createClass","key","value","_getMovieDetails","_asyncToGenerator","_regeneratorRuntime","_callee","url","response","_context","prev","next","concat","BASE_URL","API_KEY","axios","sent","abrupt","data","t0","console","error","stop","_x","apply","arguments","_getTrendingMovies","_callee2","timeWindow","_context2","results","_x2","_searchMovies","_callee3","query","page","_context3","_x3","_x4","_getMovieById","_callee4","_context4","_x5","_getCreditsByMovieId","_callee5","_context5","cast","_x6","_getMovieReviews","_callee6","_context6","_x7"],"sourceRoot":""}